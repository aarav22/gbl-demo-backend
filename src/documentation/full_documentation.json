{
  "openapi": "3.0.2",
  "info": {
    "title": "GBL API Documentation",
    "description": "REST API for GBL",
    "contact": {
      "name": "Aarav Varshney",
      "url": "https://github.com/aarav22",
      "email": "aarav.secondary+gbldemo@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://www.mit.edu/~amini/LICENSE.md"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Local Server"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "identifier": {
                  "example": "string"
                },
                "password": {
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "string"
                },
                "password": {
                  "example": "string"
                },
                "username": {
                  "example": "string"
                },
                "name": {
                  "example": "string"
                },
                "image": {
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "Get details of the current user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/": {
      "put": {
        "tags": [
          "users"
        ],
        "description": "Update the current user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "string"
                },
                "image": {
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/data/get-all": {
      "get": {
        "tags": [
          "data"
        ],
        "description": "Get all data, use query unread and closed to filter",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "unread",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "closed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/data/get-one": {
      "get": {
        "tags": [
          "data"
        ],
        "description": "Get data for a specific id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "case_id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/data/create": {
      "post": {
        "tags": [
          "data"
        ],
        "description": "Create data but only if the user is Admin",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "branch": {
                  "example": "Delhi"
                },
                "reporting_method": {
                  "example": "Email"
                },
                "date": {
                  "example": "2021-12-12"
                },
                "time": {
                  "example": "12:12"
                },
                "category": {
                  "example": "General"
                },
                "sub_category": {
                  "example": "Complaints"
                },
                "priority": {
                  "example": "High"
                },
                "nature": {
                  "example": "Health"
                },
                "case_mgr": {
                  "example": "Daryl"
                },
                "case_reporter": {
                  "example": "Tanner"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/data/update": {
      "put": {
        "tags": [
          "data"
        ],
        "description": "Update data but only if the user is Admin",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "case_id": {
                  "example": "any"
                },
                "branch": {
                  "example": "Delhi"
                },
                "reporting_method": {
                  "example": "Email"
                },
                "date": {
                  "example": "2021-12-12"
                },
                "time": {
                  "example": "12:12"
                },
                "category": {
                  "example": "General"
                },
                "sub_category": {
                  "example": "Complaints"
                },
                "priority": {
                  "example": "High"
                },
                "nature": {
                  "example": "Health"
                },
                "case_mgr": {
                  "example": "Daryl"
                },
                "case_reporter": {
                  "example": "Tanner"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/data/delete": {
      "delete": {
        "tags": [
          "data"
        ],
        "description": "Delete data but only if the user is Admin",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "case_id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}